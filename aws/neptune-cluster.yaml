Description: Base Template to create Neptune Stack inside a VPC
Parameters:
  ParentVPCStack:
    Description: 'Stack name of parent VPC'
    Type: String
  Env:
    Description: 'Environment tag, e.g. prod, nonprod.'
    Default: test
    Type: String
    AllowedPattern: '[a-z0-9]+'
    MaxLength: 15
  DbInstanceType:
    Description: Neptune DB instance type
    Type: String
    Default: db.r4.large
    AllowedValues:
    - db.r4.large
    - db.r4.xlarge
    - db.r4.2xlarge
    - db.r4.4xlarge
    - db.r4.8xlarge
    ConstraintDescription: Must be a valid Neptune instance type.
  DBReplicaIdentifierSuffix:
    Description: >-
      OPTIONAL: The ID for the Neptune Replica to use. Empty means no read
      replica.
    Type: String
    Default: ''
  NeptuneQueryTimeout:
    Type: Number
    Default: 600000
    Description: Neptune Query Time out (in milliseconds)
  NeptuneEnableAuditLog:
    Type: Number
    Default: 1
    AllowedValues:
    - 0
    - 1
    Description: Enable Audit Log. 0 means disable and 1 means enable.
  IamAuthEnabled:
    Type: String
    Default: 'false'
    AllowedValues:
    - 'true'
    - 'false'
    Description: Enable IAM Auth for Neptune.
#  PublicRouteTable:
#    Type: String
#    Default: {'Fn::ImportValue': !Sub '${ParentVPCStack}-RouteTableAPublic'}
#    Description: Public route table of vpc cluster

Conditions:
  CreateDBReplicaInstance: !Not
  - !Equals
    - !Ref DBReplicaIdentifierSuffix
    - ''
Resources:
  NeptuneDBSubnetGroup:
    Type: 'AWS::Neptune::DBSubnetGroup'
    Description: Please add subnets to cover at least 2 availability zones
    Properties:
      DBSubnetGroupDescription: Neptune DB subnet group
      SubnetIds:
      - 'Fn::ImportValue': !Sub '${ParentVPCStack}-Subnet1'
      - 'Fn::ImportValue': !Sub '${ParentVPCStack}-Subnet2'
      #      - !Ref Subnet3
      Tags:
      - Key: Name
        Value: !Sub 'Neptune-${Env}'
      - Key: StackId
        Value: !Sub '${AWS::StackId}'
      - Key: Stack
        Value: !Sub '${AWS::Region}-${AWS::StackName}'
      - Key: Application
        Value: NeptuneCloudformation
  NeptuneDBClusterParameterGroup:
    Type: 'AWS::Neptune::DBClusterParameterGroup'
    Properties:
      Family: neptune1
      Description: test-cfn-neptune-db-cluster-parameter-group-description
      Parameters:
        neptune_enable_audit_log: !Ref NeptuneEnableAuditLog
      Tags:
      - Key: Name
        Value: !Sub 'Neptune-${Env}'
      - Key: StackId
        Value: !Sub '${AWS::StackName}'
      - Key: Stack
        Value: !Sub '${AWS::Region}-${AWS::StackId}'
      - Key: Application
        Value: NeptuneCloudformation
  NeptuneDBParameterGroup:
    Type: 'AWS::Neptune::DBParameterGroup'
    Properties:
      Family: neptune1
      Description: test-cfn-neptune-db-parameter-group-description
      Parameters:
        neptune_query_timeout: !Ref NeptuneQueryTimeout
      Tags:
      - Key: Name
        Value: !Sub 'Neptune-${Env}'
      - Key: StackId
        Value: !Sub '${AWS::StackId}'
      - Key: Stack
        Value: !Sub '${AWS::Region}-${AWS::StackName}'
      - Key: Application
        Value: NeptuneCloudformation
  NeptuneDBCluster:
    Type: 'AWS::Neptune::DBCluster'
    Properties:
      DBSubnetGroupName: !Ref NeptuneDBSubnetGroup
      VpcSecurityGroupIds:
      - 'Fn::ImportValue': !Sub '${ParentVPCStack}-DefaultSG'
      - 'Fn::ImportValue': !Sub '${ParentVPCStack}-NeptuneSG'
      DBClusterParameterGroupName: !Ref NeptuneDBClusterParameterGroup
      IamAuthEnabled: !Ref IamAuthEnabled
      Tags:
      - Key: Name
        Value: !Sub 'Neptune-${Env}'
      - Key: StackId
        Value: !Sub '${AWS::StackId}'
      - Key: Stack
        Value: !Sub '${AWS::Region}-${AWS::StackName}'
      - Key: Application
        Value: NeptuneCloudformation
    DependsOn:
    - NeptuneDBSubnetGroup
    - NeptuneDBClusterParameterGroup
  NeptuneDBInstance:
    Type: 'AWS::Neptune::DBInstance'
    Properties:
      DBClusterIdentifier: !Ref NeptuneDBCluster
      DBInstanceClass: !Ref DbInstanceType
      DBParameterGroupName: !Ref NeptuneDBParameterGroup
      Tags:
      - Key: Name
        Value: !Sub 'Neptune-${Env}'
      - Key: StackId
        Value: !Sub '${AWS::StackId}'
      - Key: Stack
        Value: !Sub '${AWS::Region}-${AWS::StackName}'
      - Key: Application
        Value: NeptuneCloudformation
    DependsOn:
    - NeptuneDBCluster
    - NeptuneDBParameterGroup
Outputs:
  DBClusterId:
    Description: Neptune Cluster Identifier
    Value: !Ref NeptuneDBCluster
    Export:
      Name: !Sub '${AWS::StackName}-DBClusterId'
  DBSubnetGroupId:
    Description: Neptune DBSubnetGroup Identifier
    Value: !Ref NeptuneDBSubnetGroup
  DBClusterResourceId:
    Description: Neptune Cluster Resource Identifier
    Value: !GetAtt
    - NeptuneDBCluster
    - ClusterResourceId
  DBClusterEndpoint:
    Description: Master Endpoint for Neptune Cluster
    Value: !GetAtt
    - NeptuneDBCluster
    - Endpoint
  DBInstanceEndpoint:
    Description: Master Instance Endpoint
    Value: !GetAtt
    - NeptuneDBInstance
    - Endpoint
  SparqlEndpoint:
    Description: Sparql Endpoint for Neptune
    Value: !Join
    - ''
    - - 'http://'
      - !GetAtt
        - NeptuneDBCluster
        - Endpoint
      - ':'
      - !GetAtt
        - NeptuneDBCluster
        - Port
      - /sparql
  GremlinEndpoint:
    Description: Gremlin Endpoint for Neptune
    Value: !Join
    - ''
    - - 'http://'
      - !GetAtt
        - NeptuneDBCluster
        - Endpoint
      - ':'
      - !GetAtt
        - NeptuneDBCluster
        - Port
      - /gremlin
  LoaderEndpoint:
    Description: Loader Endpoint for Neptune
    Value: !Join
    - ''
    - - 'http://'
      - !GetAtt
        - NeptuneDBCluster
        - Endpoint
      - ':'
      - !GetAtt
        - NeptuneDBCluster
        - Port
      - /loader
  DBClusterReadEndpoint:
    Description: DB cluster Read Endpoint
    Value: !GetAtt
    - NeptuneDBCluster
    - ReadEndpoint
  DBClusterPort:
    Description: Port for the Neptune Cluster
    Value: !GetAtt
    - NeptuneDBCluster
    - Port